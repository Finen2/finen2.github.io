{"remainingRequest":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/thread-loader/dist/cjs.js!/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/babel-loader/lib/index.js!/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/src/js/Account.js","dependencies":[{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/src/js/Account.js","mtime":1557487623318},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _classCallCheck from \"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport firebase from 'firebase';\nimport db from './firebase/FirebaseInit';\nimport { Autentication } from './Autentication';\nimport router from '../router';\n\nvar Account =\n/*#__PURE__*/\nfunction () {\n  function Account() {\n    _classCallCheck(this, Account);\n  }\n\n  _createClass(Account, [{\n    key: \"registerUser\",\n    // Account\n    value: function registerUser(email, firstName, lastName, password) {\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n        //user\n        db.collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n          email: email,\n          firstName: firstName,\n          lastName: lastName,\n          ownedWatches: []\n        }).catch(function (error) {\n          alert(error);\n        });\n      }, function (err) {\n        alert(err.message);\n      });\n    }\n  }, {\n    key: \"loginUser\",\n    value: function loginUser(email, password) {\n      var _this = this;\n\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n        _this.setUid();\n\n        router.replace('/profile');\n      }, function (err) {\n        alert(err.message);\n      });\n    }\n  }, {\n    key: \"logutUser\",\n    value: function logutUser() {\n      var _this2 = this;\n\n      firebase.auth().signOut().then(function () {\n        alert('You have been logedout');\n\n        _this2.removeUid();\n\n        router.replace('/collection');\n      }, function (error) {\n        alert(error);\n      });\n    } //generating an error\n\n  }, {\n    key: \"checkLoginStatus\",\n    value: function checkLoginStatus() {\n      var _this3 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          // User is signed in.\n          _this3.setUid();\n\n          _this3.getUserInfo();\n\n          router.replace('/profile');\n        } else {\n          // No user is signed in.\n          _this3.removeUid();\n\n          router.replace('/collection');\n        }\n      });\n    }\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo() {\n      if (Autentication.instance().getToken === undefined) {\n        this.checkLoginStatus();\n      }\n\n      db.collection(\"users\").doc(Autentication.instance().getToken).get().then(function (doc) {\n        if (doc.exists === true) {\n          Account.userInfo = doc.data();\n        } else {\n          // doc.data() will be undefined in this case\n          alert(\"Could not find user\");\n        }\n      }).catch(function (error) {\n        alert(\"Error getting user:\", error);\n      });\n    }\n  }, {\n    key: \"setUid\",\n    value: function setUid() {\n      Autentication.instance().getToken = firebase.auth().currentUser.uid;\n    }\n  }, {\n    key: \"removeUid\",\n    value: function removeUid() {\n      Autentication.instance().removeToken;\n    }\n  }]);\n\n  return Account;\n}();\n\n_defineProperty(Account, \"userInfo\", {});\n\nexport { Account };",{"version":3,"sources":["/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/src/js/Account.js"],"names":["firebase","db","Autentication","router","Account","email","firstName","lastName","password","auth","createUserWithEmailAndPassword","then","collection","doc","currentUser","uid","set","ownedWatches","catch","error","alert","err","message","signInWithEmailAndPassword","setUid","replace","signOut","removeUid","onAuthStateChanged","user","getUserInfo","instance","getToken","undefined","checkLoginStatus","get","exists","userInfo","data","removeToken"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;IAEMC,O;;;;;;;;;AACJ;iCACeC,K,EAAOC,S,EAAWC,Q,EAAUC,Q,EAAU;AACjDR,MAAAA,QAAQ,CAACS,IAAT,GAAgBC,8BAAhB,CAA+CL,KAA/C,EAAsDG,QAAtD,EAAgEG,IAAhE,CACE,YAAM;AAAE;AACNV,QAAAA,EAAE,CAACW,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2Bb,QAAQ,CAACS,IAAT,GAAgBK,WAAhB,CAA4BC,GAAvD,EAA4DC,GAA5D,CAAgE;AAC9DX,UAAAA,KAAK,EAAEA,KADuD;AAE9DC,UAAAA,SAAS,EAAEA,SAFmD;AAG9DC,UAAAA,QAAQ,EAAEA,QAHoD;AAI9DU,UAAAA,YAAY,EAAE;AAJgD,SAAhE,EAMCC,KAND,CAMO,UAACC,KAAD,EAAW;AACdC,UAAAA,KAAK,CAACD,KAAD,CAAL;AACH,SARD;AASD,OAXH,EAYE,UAACE,GAAD,EAAS;AACPD,QAAAA,KAAK,CAACC,GAAG,CAACC,OAAL,CAAL;AACD,OAdH;AAgBD;;;8BAESjB,K,EAAOG,Q,EAAS;AAAA;;AACxBR,MAAAA,QAAQ,CAACS,IAAT,GAAgBc,0BAAhB,CAA2ClB,KAA3C,EAAkDG,QAAlD,EAA4DG,IAA5D,CACE,YAAM;AACJ,QAAA,KAAI,CAACa,MAAL;;AACArB,QAAAA,MAAM,CAACsB,OAAP,CAAgB,UAAhB;AACD,OAJH,EAKE,UAACJ,GAAD,EAAS;AACPD,QAAAA,KAAK,CAACC,GAAG,CAACC,OAAL,CAAL;AACD,OAPH;AASD;;;gCAEU;AAAA;;AACTtB,MAAAA,QAAQ,CAACS,IAAT,GAAgBiB,OAAhB,GAA0Bf,IAA1B,CAA+B,YAAM;AACnCS,QAAAA,KAAK,CAAC,wBAAD,CAAL;;AACA,QAAA,MAAI,CAACO,SAAL;;AACAxB,QAAAA,MAAM,CAACsB,OAAP,CAAgB,aAAhB;AACD,OAJD,EAIE,UAACN,KAAD,EAAW;AACXC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD,OAND;AAOD,K,CAED;;;;uCACkB;AAAA;;AAChBnB,MAAAA,QAAQ,CAACS,IAAT,GAAgBmB,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAC3C,YAAIA,IAAJ,EAAU;AACR;AACA,UAAA,MAAI,CAACL,MAAL;;AACA,UAAA,MAAI,CAACM,WAAL;;AACA3B,UAAAA,MAAM,CAACsB,OAAP,CAAgB,UAAhB;AACD,SALD,MAKK;AACH;AACA,UAAA,MAAI,CAACE,SAAL;;AACAxB,UAAAA,MAAM,CAACsB,OAAP,CAAgB,aAAhB;AACD;AACF,OAXD;AAYD;;;kCAGa;AACZ,UAAIvB,aAAa,CAAC6B,QAAd,GAAyBC,QAAzB,KAAsCC,SAA1C,EAAqD;AACnD,aAAKC,gBAAL;AACD;;AACDjC,MAAAA,EAAE,CAACW,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BX,aAAa,CAAC6B,QAAd,GAAyBC,QAApD,EAA8DG,GAA9D,GAAoExB,IAApE,CAAyE,UAACE,GAAD,EAAS;AAClF,YAAIA,GAAG,CAACuB,MAAJ,KAAe,IAAnB,EAAyB;AACrBhC,UAAAA,OAAO,CAACiC,QAAR,GAAmBxB,GAAG,CAACyB,IAAJ,EAAnB;AACH,SAFD,MAEO;AACL;AACAlB,UAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;AACF,OAPC,EAOCF,KAPD,CAOO,UAACC,KAAD,EAAW;AAChBC,QAAAA,KAAK,CAAC,qBAAD,EAAwBD,KAAxB,CAAL;AACH,OATC;AAUD;;;6BAEQ;AACPjB,MAAAA,aAAa,CAAC6B,QAAd,GAAyBC,QAAzB,GAAoChC,QAAQ,CAACS,IAAT,GAAgBK,WAAhB,CAA4BC,GAAhE;AACD;;;gCACW;AACVb,MAAAA,aAAa,CAAC6B,QAAd,GAAyBQ,WAAzB;AACD;;;;;;gBAjFCnC,O,cA2DgB,E;;AAyBtB,SAAQA,OAAR","sourcesContent":["import firebase from 'firebase';\nimport db from './firebase/FirebaseInit'\nimport {Autentication} from './Autentication'\nimport router from '../router'\n\nclass Account {\n  // Account\n    registerUser(email, firstName, lastName, password) {\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(\n        () => { //user\n          db.collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n            email: email,\n            firstName: firstName,\n            lastName: lastName,\n            ownedWatches: [],\n          })\n          .catch((error) => {\n              alert(error);\n          });\n        },\n        (err) => {\n          alert(err.message)\n        }\n      );\n    }\n\n    loginUser(email, password){\n      firebase.auth().signInWithEmailAndPassword(email, password).then(\n        () => {\n          this.setUid()\n          router.replace( '/profile' );\n        },\n        (err) => {\n          alert(err.message)\n        }\n      );\n    }\n\n    logutUser(){\n      firebase.auth().signOut().then(() => {\n        alert('You have been logedout')\n        this.removeUid()\n        router.replace( '/collection' );\n      },(error) => {\n        alert(error)\n      });\n    }\n\n    //generating an error\n    checkLoginStatus(){\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          // User is signed in.\n          this.setUid();\n          this.getUserInfo()\n          router.replace( '/profile' );\n        }else{\n          // No user is signed in.\n          this.removeUid()\n          router.replace( '/collection' );\n        }\n      });\n    }\n\n    static userInfo = {};\n    getUserInfo() {\n      if (Autentication.instance().getToken === undefined) {\n        this.checkLoginStatus()\n      }\n      db.collection(\"users\").doc(Autentication.instance().getToken).get().then((doc) => {\n      if (doc.exists === true) {\n          Account.userInfo = doc.data()\n      } else {\n        // doc.data() will be undefined in this case\n        alert(\"Could not find user\");\n      }\n    }).catch((error) => {\n        alert(\"Error getting user:\", error);\n    });\n    }\n\n    setUid() {\n      Autentication.instance().getToken = firebase.auth().currentUser.uid\n    }\n    removeUid() {\n      Autentication.instance().removeToken\n    }\n\n  }\nexport {Account};\n"]}]}