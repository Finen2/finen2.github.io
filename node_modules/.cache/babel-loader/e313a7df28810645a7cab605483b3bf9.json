{"remainingRequest":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/thread-loader/dist/cjs.js!/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/babel-loader/lib/index.js!/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/src/collection/components/AddWatch.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/src/collection/components/AddWatch.js","mtime":1557168449615},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { Watches } from '../../js/Watches.js';\nimport Btn from '../../liberyComponents/Btn.vue';\nimport Form from '../../liberyComponents/Form.vue';\nimport InputFiled from '../../liberyComponents/InputFiled.vue';\nexport default {\n  name: 'addWatch',\n  components: {\n    Btn: Btn,\n    Form: Form,\n    InputFiled: InputFiled\n  },\n  props: {\n    propFunction: Function\n  },\n  data: function data() {\n    return {\n      input: {\n        brand: '',\n        family: '',\n        name: '',\n        movementType: '',\n        caseType: '',\n        comment: '',\n        file: {\n          type: Object,\n          default: function _default() {\n            return {};\n          }\n        }\n      },\n      componentKey: 0\n    };\n  },\n  methods: {\n    addWatch: function () {\n      var _addWatch = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var uploadFile, path, watch;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                uploadFile = document.getElementById(\"files\").files[0];\n\n                if (!(uploadFile.size <= 5242880)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                this.input.file = uploadFile;\n                path = this.input;\n                watch = new Watches();\n                _context.next = 7;\n                return watch.addWatch(path.brand, path.family, path.name, path.movementType, path.caseType, path.comment, path.file);\n\n              case 7:\n                this.propFunction();\n                _context.next = 11;\n                break;\n\n              case 10:\n                alert('Image size is to big');\n\n              case 11:\n                this.componentKey += 1;\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addWatch() {\n        return _addWatch.apply(this, arguments);\n      }\n\n      return addWatch;\n    }()\n  }\n};",{"version":3,"sources":["/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/src/collection/components/AddWatch.js"],"names":["Watches","Btn","Form","InputFiled","name","components","props","propFunction","Function","data","input","brand","family","movementType","caseType","comment","file","type","Object","default","componentKey","methods","addWatch","uploadFile","document","getElementById","files","size","path","watch","alert"],"mappings":";;;AAAA,SAAQA,OAAR,QAAsB,qBAAtB;AACA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,UADO;AAEbC,EAAAA,UAAU,EAAE;AACVJ,IAAAA,GAAG,EAAHA,GADU;AAEVC,IAAAA,IAAI,EAAJA,IAFU;AAGVC,IAAAA,UAAU,EAAVA;AAHU,GAFC;AAObG,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAEC;AADT,GAPM;AAUbC,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,MAAM,EAAE,EAFH;AAGLR,QAAAA,IAAI,EAAE,EAHD;AAILS,QAAAA,YAAY,EAAE,EAJT;AAKLC,QAAAA,QAAQ,EAAE,EALL;AAMLC,QAAAA,OAAO,EAAE,EANJ;AAOLC,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAEC,MADF;AAEJC,UAAAA,OAAO,EAAE;AAAA,mBAAO,EAAP;AAAA;AAFL;AAPD,OADI;AAaXC,MAAAA,YAAY,EAAE;AAbH,KAAP;AAAA,GAVO;AAyBbC,EAAAA,OAAO,EAAE;AACDC,IAAAA,QADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAECC,gBAAAA,UAFD,GAEcC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC,CAAuC,CAAvC,CAFd;;AAAA,sBAGDH,UAAU,CAACI,IAAX,IAAmB,OAHlB;AAAA;AAAA;AAAA;;AAIH,qBAAKjB,KAAL,CAAWM,IAAX,GAAkBO,UAAlB;AACMK,gBAAAA,IALH,GAKU,KAAKlB,KALf;AAMGmB,gBAAAA,KANH,GAMW,IAAI7B,OAAJ,EANX;AAAA;AAAA,uBAOG6B,KAAK,CAACP,QAAN,CAAeM,IAAI,CAACjB,KAApB,EAA2BiB,IAAI,CAAChB,MAAhC,EAAwCgB,IAAI,CAACxB,IAA7C,EAAmDwB,IAAI,CAACf,YAAxD,EAAsEe,IAAI,CAACd,QAA3E,EAAqFc,IAAI,CAACb,OAA1F,EAAmGa,IAAI,CAACZ,IAAxG,CAPH;;AAAA;AAQH,qBAAKT,YAAL;AARG;AAAA;;AAAA;AAUHuB,gBAAAA,KAAK,CAAC,sBAAD,CAAL;;AAVG;AAYL,qBAAKV,YAAL,IAAqB,CAArB;;AAZK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzBI,CAAf","sourcesContent":["import {Watches} from '../../js/Watches.js'\nimport Btn from '../../liberyComponents/Btn.vue'\nimport Form from '../../liberyComponents/Form.vue'\nimport InputFiled from '../../liberyComponents/InputFiled.vue'\n\nexport default {\n  name: 'addWatch',\n  components: {\n    Btn,\n    Form,\n    InputFiled,\n  },\n  props: {\n    propFunction: Function\n  },\n  data: () => ({\n    input: {\n      brand: '',\n      family: '',\n      name: '',\n      movementType: '',\n      caseType: '',\n      comment: '',\n      file: {\n        type: Object,\n        default: () => ({})\n      },\n    },\n    componentKey: 0,\n  }),\n  methods: {\n    async addWatch() {\n      const uploadFile = document.getElementById(\"files\").files[0]\n      if (uploadFile.size <= 5242880) {\n        this.input.file = uploadFile\n        const path = this.input\n        const watch = new Watches;\n        await watch.addWatch(path.brand, path.family, path.name, path.movementType, path.caseType, path.comment, path.file);\n        this.propFunction();\n      }else{\n        alert('Image size is to big')\n      }\n      this.componentKey += 1;\n    },\n  },\n}\n"]}]}