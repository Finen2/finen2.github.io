{"remainingRequest":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/thread-loader/dist/cjs.js!/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/babel-loader/lib/index.js!/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/src/js/Watches.js","dependencies":[{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/src/js/Watches.js","mtime":1557417329623},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport db from './firebase/FirebaseInit';\nimport firebase from 'firebase';\nimport { Autentication } from './Autentication';\nimport { Account } from './Account';\n\nvar Watches =\n/*#__PURE__*/\nfunction () {\n  function Watches() {\n    _classCallCheck(this, Watches);\n  }\n\n  _createClass(Watches, [{\n    key: \"getWatches\",\n    value: function getWatches() {\n      var watchesArray = [];\n      db.collection(\"watches\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          var watch = {\n            id: doc.id,\n            data: doc.data(),\n            img: firebase.storage().ref().child('watches/' + doc.id).getDownloadURL().then(function (url) {\n              return url;\n            }).catch(function (error) {\n              return error;\n            })\n          };\n          watchesArray.push(watch);\n        });\n      });\n      Watches.watchList = watchesArray;\n    }\n  }, {\n    key: \"getWatchesUser\",\n    value: function getWatchesUser() {\n      if (Autentication.instance().getToken === undefined) {\n        new Account().checkLoginStatus();\n      }\n\n      var watchesArray = [];\n      db.collection(\"watches\").where(\"owner\", \"==\", Autentication.instance().getToken).get().then(function (snapshot) {\n        snapshot.docs.forEach(function (doc) {\n          var watch = {\n            id: doc.id,\n            data: doc.data(),\n            img: firebase.storage().ref().child('watches/' + doc.id).getDownloadURL().then(function (url) {\n              return url;\n            }).catch(function (error) {\n              return error;\n            })\n          };\n          watchesArray.push(watch);\n        });\n      });\n      Watches.watchListUser = watchesArray;\n    }\n  }, {\n    key: \"addWatch\",\n    value: function addWatch(brand, family, name, movementType, caseType, comment, file) {\n      db.collection(\"watches\").add({\n        brand: brand,\n        caseDiameter: caseType,\n        family: family,\n        movmentType: movementType,\n        name: name,\n        owner: Autentication.instance().getToken,\n        comment: comment\n      }).then(function (docRef) {\n        db.collection(\"users\").doc(Autentication.instance().getToken).update({\n          ownedWatches: firebase.firestore.FieldValue.arrayUnion(docRef.id)\n        }); // Upload image to storage\n\n        firebase.storage().ref('watches/' + docRef.id).put(file);\n      }).catch(function (error) {\n        alert(\"Error adding document: \", error);\n      });\n    }\n  }, {\n    key: \"removeWatch\",\n    value: function removeWatch(id) {\n      db.collection(\"watches\").doc(id).delete().then(function () {}).catch(function (error) {\n        alert(\"Error removing document: \", error);\n      });\n    }\n  }]);\n\n  return Watches;\n}();\n\n_defineProperty(Watches, \"watchList\", []);\n\n_defineProperty(Watches, \"watchListUser\", []);\n\nexport { Watches };",{"version":3,"sources":["/Users/finen/Documents/git/ExamensArbete/examProject/watch-collector/src/js/Watches.js"],"names":["db","firebase","Autentication","Account","Watches","watchesArray","collection","get","then","querySnapshot","forEach","doc","watch","id","data","img","storage","ref","child","getDownloadURL","url","catch","error","push","watchList","instance","getToken","undefined","checkLoginStatus","where","snapshot","docs","watchListUser","brand","family","name","movementType","caseType","comment","file","add","caseDiameter","movmentType","owner","docRef","update","ownedWatches","firestore","FieldValue","arrayUnion","put","alert","delete"],"mappings":"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","sourcesContent":["import db from './firebase/FirebaseInit'\nimport firebase from 'firebase';\nimport {Autentication} from './Autentication'\nimport {Account} from './Account'\n\nclass Watches {\n\n  static watchList = [];\n  getWatches(){\n    const watchesArray = []\n    db.collection(\"watches\").get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        let watch = {\n          id: doc.id,\n          data: doc.data(),\n          img: firebase.storage().ref().child('watches/' + doc.id).getDownloadURL().then((url) => {\n            return url\n          }).catch((error) => {\n            return error\n          })\n        };\n        watchesArray.push(watch)\n      });\n    });\n    Watches.watchList = watchesArray\n  }\n\n  static watchListUser = [];\n  getWatchesUser(){\n    if (Autentication.instance().getToken === undefined) {\n      new Account().checkLoginStatus();\n    }\n    const watchesArray = []\n    db.collection(\"watches\").where(\"owner\", \"==\", Autentication.instance().getToken).get().then(snapshot => {\n      snapshot.docs.forEach( (doc) => {\n        let watch = {\n          id: doc.id,\n          data: doc.data(),\n          img: firebase.storage().ref().child('watches/' + doc.id).getDownloadURL().then((url) => {\n            return url\n          }).catch((error) => {\n            return error\n          })\n        };\n        watchesArray.push(watch)\n      });\n    });\n    Watches.watchListUser = watchesArray\n\n   }\n\n  addWatch(brand, family, name, movementType, caseType, comment, file) {\n    db.collection(\"watches\").add({\n        brand: brand,\n        caseDiameter: caseType,\n        family: family,\n        movmentType: movementType,\n        name: name,\n        owner: Autentication.instance().getToken,\n        comment: comment\n    })\n    .then((docRef) => {\n       db.collection(\"users\").doc(Autentication.instance().getToken).update({\n        ownedWatches: firebase.firestore.FieldValue.arrayUnion(docRef.id)\n      });\n      // Upload image to storage\n      firebase.storage().ref('watches/' + docRef.id).put(file);\n    })\n    .catch((error) => {\n        alert(\"Error adding document: \", error);\n    });\n  }\n\n  removeWatch(id) {\n    db.collection(\"watches\").doc(id).delete().then(() => {\n    }).catch((error) => {\n        alert(\"Error removing document: \", error);\n    });\n\n  }\n\n}\nexport {Watches};\n"]}]}